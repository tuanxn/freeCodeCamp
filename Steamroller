/*
Flatten a nested array. You must account for varying levels of nesting.
*/

function steamrollArray(arr) {
  // Create empty flattened array
  let flattenArr = [];
  // Create recursive function that will search for non-object elements
  (function flatten(arr) {
    // Loop through array elements
    for (let i=0; i<arr.length; i++) {
      // If the element is an object and has a length of 0 or greater (i.e. it is an array and not an object literal)
      if (typeof arr[i] == 'object' && arr[i].length >= 0) {
        // Use the recursive function to go into that nested array and loop through its elements
        flatten(arr[i]);
      }else {
        // If the element isn't an array, then add to the flatted array
        flattenArr.push(arr[i]);
      }
    }
  // Use IIFE to call the recursive function immediately passing in the original array for the first call
  })(arr);
  return flattenArr;
}

steamrollArray([1, [2], [3, [[4]]]]);
